version: 2

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: alpine/terragrunt:0.12.13
  environment:
    TG_IN_AUTOMATION: true

jobs:
  init:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: aws auth
          command: mkdir ~/.aws; echo -e "[default]\naws_access_key_id=$AWS_KEY\naws_secret_access_key=$AWS_SECRET\n" > ~/.aws/credentials
      - run:
          name: init
          command: terragrunt init --input=false --terragrunt-working-dir=~/repo/prorated/aws --terragrunt-non-interactive
      - persist_to_workspace:
          root: ~/repo
          paths: .
      - persist_to_workspace:
          root: ~/.aws
          paths: .
  plan:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - attach_workspace:
          at: ~/.aws
      - run:
          name: github key
          command: mkdir ~/.ssh && ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: env passwords
          command:  echo -e rds_db_root_password\:\ \"$RDS_DB_ROOT_PASSWORD\" > ~/repo/prorated/aws/us-east-1/env.yaml
      - run:
          name: plan
          command:  terragrunt plan-all --input=false --terragrunt-working-dir=~/repo/prorated/aws --terragrunt-non-interactive
      - persist_to_workspace:
          root: ~/repo
          paths: .
      - persist_to_workspace:
          root: ~/.aws
          paths: .
      - persist_to_workspace:
          root: ~/.ssh
          paths: .
      - store_artifacts:
          path: ~/repo
          destination: tfplan
  apply:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - attach_workspace:
          at: ~/.aws
      - attach_workspace:
          at: ~/.ssh
      - run:
          name: env passwords
          command:  echo -e rds_db_root_password\:\ \"$RDS_DB_ROOT_PASSWORD\" > ~/repo/prorated/aws/us-east-1/env.yaml
      - run:
          name: apply
          command: terragrunt apply-all --input=false --terragrunt-working-dir=~/repo/prorated/aws --terragrunt-non-interactive
      - store_artifacts:
          path: ~/repo
          destination: tfresult
  destroy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - attach_workspace:
          at: ~/.aws
      - attach_workspace:
          at: ~/.ssh
      - run:
          name: env passwords
          command:  echo -e rds_db_root_password\:\ \"\" > ~/repo/prorated/aws/us-east-1/env.yaml
      - run:
          name: apply
          command: terragrunt destroy-all --input=false --terragrunt-working-dir=~/repo/prorated/aws --terragrunt-non-interactive
      - store_artifacts:
          path: ~/repo
          destination: tfdestroy
workflows:
  version: 2
  build_deploy:
    jobs:
      - init
      - plan:
          requires:
            - init
      - prod-approval:
          type: approval
          requires:
            - plan
          filters:
            branches:
              only: 
                - master
      - apply:
          requires:
            - prod-approval
          filters:
            branches:
              only: 
                - master
      - destroy-approval:
          type: approval
          requires:
            - init
          filters:
            branches:
              only: 
                - master
      - destroy:
          requires:
            - destroy-approval
          filters:
            branches:
              only: 
                - master
            tags:
              only: /^Destroy-((0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01])-[12]\d{3}).*/

